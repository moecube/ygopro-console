// Generated by CoffeeScript 2.0.0-beta3
(function() {
  var Config, Pool, QUERY_MYCARD_SQL, QUERY_YGOPRO_SQL, SET_YGOPRO_DP_SQL, mycardPool, queryUser, setUserDp, ygoproPool;

  ({Pool} = require('pg'));

  Config = require('./config.json');

  QUERY_MYCARD_SQL = 'select * from users where name like $1::text or username like $1::text';

  QUERY_YGOPRO_SQL = 'select * from user_info where username = $1::text';

  SET_YGOPRO_DP_SQL = 'update user_info set pt = $2 where username = $1::text';

  mycardPool = new Pool(Config.mycardDatabase);

  ygoproPool = new Pool(Config.ygoproDatabase);

  queryUser = function(user, callback) {
    return mycardPool.query(QUERY_MYCARD_SQL, [`%${user}%`], function(err, result) {
      var index, names;
      if (err) {
        console.log(err);
        callback.call(this, null);
        return;
      } else if (result.rows.length === 0) {
        callback.call(this, {});
        return;
      } else if (result.rows.length > 1) {
        names = result.rows.map(function(data) {
          return data.username;
        });
        index = names.indexOf(user);
        if (index < 0) {
          callback.call(this, names);
          return;
        } else {
          result.rows[0] = result.rows[index];
        }
      }
      return ygoproPool.query(QUERY_YGOPRO_SQL, [result.rows[0].username], function(err2, result2) {
        if (err2) {
          console.log(err2);
        }
        return callback.call(this, Object.assign(result.rows[0], result2.rows[0]));
      });
    });
  };

  setUserDp = function(user, dp, callback) {
    return ygoproPool.query(SET_YGOPRO_DP_SQL, [user, dp], function(err, result) {
      if (err) {
        console.log(err);
        return callback.call(this, null);
      } else {
        return callback.call(this, result);
      }
    });
  };

  module.exports.queryUser = queryUser;

  module.exports.setUserDp = setUserDp;

}).call(this);

//# sourceMappingURL=user.js.map
